{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop_D\\\\react-animejs\\\\raft\\\\src\\\\pages\\\\page200.js\",\n  _s = $RefreshSig$();\nimport '../css/page200.css';\nimport React, { useEffect, useRef } from 'react';\nimport anime from \"animejs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Page200(props) {\n  _s();\n  const progressBarRef = useRef(null);\n  useEffect(() => {\n    const progressBar = progressBarRef.current;\n\n    // 使用anime.js创建动画\n    const animation = anime({\n      targets: progressBar,\n      strokeDashoffset: [anime.setDashoffset, 0],\n      easing: 'linear',\n      duration: 2000,\n      direction: 'alternate',\n      autoplay: true,\n      value: [0, 75]\n    });\n    return () => {\n      animation.pause(); // 在组件卸载时停止动画\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"progress-bar\",\n    viewBox: \"0 0 100 100\",\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      className: \"progress-bar-background\",\n      cx: \"50\",\n      cy: \"50\",\n      r: \"40\",\n      stroke: \"#ddd\",\n      strokeWidth: \"10\",\n      fill: \"transparent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      ref: progressBarRef,\n      className: \"progress-bar-indicator\",\n      cx: \"50\",\n      cy: \"50\",\n      r: \"40\",\n      stroke: \"#ff0000\",\n      strokeWidth: \"10\",\n      fill: \"transparent\",\n      strokeDasharray: \"251.2\",\n      strokeDashoffset: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n_s(Page200, \"kg56XCnbTMBS4/pNkWMU/mggKjg=\");\n_c = Page200;\n;\nexport default Page200;\nvar _c;\n$RefreshReg$(_c, \"Page200\");","map":{"version":3,"names":["React","useEffect","useRef","anime","jsxDEV","_jsxDEV","Page200","props","_s","progressBarRef","progressBar","current","animation","targets","strokeDashoffset","setDashoffset","easing","duration","direction","autoplay","value","pause","className","viewBox","children","cx","cy","r","stroke","strokeWidth","fill","fileName","_jsxFileName","lineNumber","columnNumber","ref","strokeDasharray","_c","$RefreshReg$"],"sources":["D:/Desktop_D/react-animejs/raft/src/pages/page200.js"],"sourcesContent":["import '../css/page200.css';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport anime from \"animejs\";\r\n\r\nfunction Page200(props) {\r\n  const progressBarRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const progressBar = progressBarRef.current;\r\n\r\n    // 使用anime.js创建动画\r\n    const animation = anime({\r\n      targets: progressBar,\r\n      strokeDashoffset: [anime.setDashoffset, 0],\r\n      easing: 'linear',\r\n      duration: 2000,\r\n      direction: 'alternate',\r\n      autoplay: true,\r\n      value: [0, 75],\r\n    });\r\n\r\n    return () => {\r\n      animation.pause(); // 在组件卸载时停止动画\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n      <svg className=\"progress-bar\" viewBox=\"0 0 100 100\">\r\n        <circle\r\n            className=\"progress-bar-background\"\r\n            cx=\"50\"\r\n            cy=\"50\"\r\n            r=\"40\"\r\n            stroke=\"#ddd\"\r\n            strokeWidth=\"10\"\r\n            fill=\"transparent\"\r\n        />\r\n        <circle\r\n            ref={progressBarRef}\r\n            className=\"progress-bar-indicator\"\r\n            cx=\"50\"\r\n            cy=\"50\"\r\n            r=\"40\"\r\n            stroke=\"#ff0000\"\r\n            strokeWidth=\"10\"\r\n            fill=\"transparent\"\r\n            strokeDasharray=\"251.2\"\r\n            strokeDashoffset=\"0\"\r\n        />\r\n      </svg>\r\n  );\r\n};\r\n\r\nexport default Page200;"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAMC,cAAc,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGD,cAAc,CAACE,OAAO;;IAE1C;IACA,MAAMC,SAAS,GAAGT,KAAK,CAAC;MACtBU,OAAO,EAAEH,WAAW;MACpBI,gBAAgB,EAAE,CAACX,KAAK,CAACY,aAAa,EAAE,CAAC,CAAC;MAC1CC,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,WAAW;MACtBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE;IACf,CAAC,CAAC;IAEF,OAAO,MAAM;MACXR,SAAS,CAACS,KAAK,EAAE,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,cAAc;IAACC,OAAO,EAAC,aAAa;IAAAC,QAAA,gBACjDnB,OAAA;MACIiB,SAAS,EAAC,yBAAyB;MACnCG,EAAE,EAAC,IAAI;MACPC,EAAE,EAAC,IAAI;MACPC,CAAC,EAAC,IAAI;MACNC,MAAM,EAAC,MAAM;MACbC,WAAW,EAAC,IAAI;MAChBC,IAAI,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB,eACF7B,OAAA;MACI8B,GAAG,EAAE1B,cAAe;MACpBa,SAAS,EAAC,wBAAwB;MAClCG,EAAE,EAAC,IAAI;MACPC,EAAE,EAAC,IAAI;MACPC,CAAC,EAAC,IAAI;MACNC,MAAM,EAAC,SAAS;MAChBC,WAAW,EAAC,IAAI;MAChBC,IAAI,EAAC,aAAa;MAClBM,eAAe,EAAC,OAAO;MACvBtB,gBAAgB,EAAC;IAAG;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEZ;AAAC1B,EAAA,CA/CQF,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AA+Cf;AAED,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}