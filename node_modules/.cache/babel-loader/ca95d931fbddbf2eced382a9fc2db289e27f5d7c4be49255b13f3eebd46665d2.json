{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop_D\\\\react-animejs\\\\raft\\\\src\\\\pages\\\\page200.js\",\n  _s2 = $RefreshSig$();\nimport '../css/page200.css';\nimport React, { useEffect, useRef } from 'react';\nimport anime from \"animejs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Page200(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  // 获取圆形div和进度条元素\\\n  const circleRef = useRef(null);\n  const progressRef = useRef(null);\n  function animation() {\n    _s();\n    useEffect(() => {\n      const circle = circleRef.current;\n      const progress = progressRef.current;\n\n      // 设置初始进度（0%）\n      let initialProgress = 0;\n\n      // 设置目标进度（75%）\n      const targetProgress = 0.75;\n\n      // 设置动画属性\n      const animation = anime({\n        targets: progress,\n        strokeDasharray: [0, 2 * Math.PI * circle.offsetWidth],\n        strokeDashoffset: function (el) {\n          return anime.setDashoffset(el);\n        },\n        easing: 'linear',\n        duration: 2000,\n        loop: true,\n        autoplay: false\n      });\n\n      // 启动动画并设置进度\n      animation.play();\n      setProgress(targetProgress);\n\n      // 调节进度的函数\n      function setProgress(value) {\n        // 将进度值限制在0到1之间\n        const progressValue = Math.min(Math.max(value, 0), 1);\n\n        // 更新进度条动画\n        animation.seek(animation.duration * progressValue);\n\n        // 更新进度文本显示\n        console.log('当前进度：' + progressValue * 100 + '%');\n      }\n      return () => {\n        // 在组件卸载时停止动画\n        animation.pause();\n      };\n    }, []);\n  }\n  _s(animation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  if (props.display) animation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: props.display ? '' : 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      ref: circleRef,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"progress\",\n        ref: progressRef,\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"50%\",\n          cy: \"50%\",\n          r: \"45%\",\n          fill: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s2(Page200, \"aWC7CPZRujpNU5XNifuD777REe4=\");\n_c = Page200;\n;\nexport default Page200;\nvar _c;\n$RefreshReg$(_c, \"Page200\");","map":{"version":3,"names":["React","useEffect","useRef","anime","jsxDEV","_jsxDEV","Page200","props","_s2","_s","$RefreshSig$","circleRef","progressRef","animation","circle","current","progress","initialProgress","targetProgress","targets","strokeDasharray","Math","PI","offsetWidth","strokeDashoffset","el","setDashoffset","easing","duration","loop","autoplay","play","setProgress","value","progressValue","min","max","seek","console","log","pause","display","style","children","className","ref","cx","cy","r","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Desktop_D/react-animejs/raft/src/pages/page200.js"],"sourcesContent":["import '../css/page200.css';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport anime from \"animejs\";\r\n\r\nfunction Page200(props) {\r\n// 获取圆形div和进度条元素\\\r\n  const circleRef = useRef(null);\r\n  const progressRef = useRef(null);\r\n  function animation(){\r\n    useEffect(() => {\r\n      const circle = circleRef.current;\r\n      const progress = progressRef.current;\r\n\r\n      // 设置初始进度（0%）\r\n      let initialProgress = 0;\r\n\r\n      // 设置目标进度（75%）\r\n      const targetProgress = 0.75;\r\n\r\n      // 设置动画属性\r\n      const animation = anime({\r\n        targets: progress,\r\n        strokeDasharray: [0, 2 * Math.PI * circle.offsetWidth],\r\n        strokeDashoffset: function (el) {\r\n          return anime.setDashoffset(el);\r\n        },\r\n        easing: 'linear',\r\n        duration: 2000,\r\n        loop: true,\r\n        autoplay: false\r\n      });\r\n\r\n      // 启动动画并设置进度\r\n      animation.play();\r\n      setProgress(targetProgress);\r\n\r\n      // 调节进度的函数\r\n      function setProgress(value) {\r\n        // 将进度值限制在0到1之间\r\n        const progressValue = Math.min(Math.max(value, 0), 1);\r\n\r\n        // 更新进度条动画\r\n        animation.seek(animation.duration * progressValue);\r\n\r\n        // 更新进度文本显示\r\n        console.log('当前进度：' + (progressValue * 100) + '%');\r\n      }\r\n\r\n      return () => {\r\n        // 在组件卸载时停止动画\r\n        animation.pause();\r\n      };\r\n    }, []);\r\n  }\r\n  if(props.display) animation();\r\n\r\n  return (\r\n      <div style={{display: props.display?'': 'none'}}>\r\n        <div className=\"circle\" ref={circleRef}>\r\n          <svg className=\"progress\" ref={progressRef}>\r\n            <circle cx=\"50%\" cy=\"50%\" r=\"45%\" fill=\"transparent\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Page200;"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACxB;EACE,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMU,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAChC,SAASW,SAASA,CAAA,EAAE;IAAAJ,EAAA;IAClBR,SAAS,CAAC,MAAM;MACd,MAAMa,MAAM,GAAGH,SAAS,CAACI,OAAO;MAChC,MAAMC,QAAQ,GAAGJ,WAAW,CAACG,OAAO;;MAEpC;MACA,IAAIE,eAAe,GAAG,CAAC;;MAEvB;MACA,MAAMC,cAAc,GAAG,IAAI;;MAE3B;MACA,MAAML,SAAS,GAAGV,KAAK,CAAC;QACtBgB,OAAO,EAAEH,QAAQ;QACjBI,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGR,MAAM,CAACS,WAAW,CAAC;QACtDC,gBAAgB,EAAE,SAAAA,CAAUC,EAAE,EAAE;UAC9B,OAAOtB,KAAK,CAACuB,aAAa,CAACD,EAAE,CAAC;QAChC,CAAC;QACDE,MAAM,EAAE,QAAQ;QAChBC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,IAAI;QACVC,QAAQ,EAAE;MACZ,CAAC,CAAC;;MAEF;MACAjB,SAAS,CAACkB,IAAI,EAAE;MAChBC,WAAW,CAACd,cAAc,CAAC;;MAE3B;MACA,SAASc,WAAWA,CAACC,KAAK,EAAE;QAC1B;QACA,MAAMC,aAAa,GAAGb,IAAI,CAACc,GAAG,CAACd,IAAI,CAACe,GAAG,CAACH,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;;QAErD;QACApB,SAAS,CAACwB,IAAI,CAACxB,SAAS,CAACe,QAAQ,GAAGM,aAAa,CAAC;;QAElD;QACAI,OAAO,CAACC,GAAG,CAAC,OAAO,GAAIL,aAAa,GAAG,GAAI,GAAG,GAAG,CAAC;MACpD;MAEA,OAAO,MAAM;QACX;QACArB,SAAS,CAAC2B,KAAK,EAAE;MACnB,CAAC;IACH,CAAC,EAAE,EAAE,CAAC;EACR;EAAC/B,EAAA,CA7CQI,SAAS;EA8ClB,IAAGN,KAAK,CAACkC,OAAO,EAAE5B,SAAS,EAAE;EAE7B,oBACIR,OAAA;IAAKqC,KAAK,EAAE;MAACD,OAAO,EAAElC,KAAK,CAACkC,OAAO,GAAC,EAAE,GAAE;IAAM,CAAE;IAAAE,QAAA,eAC9CtC,OAAA;MAAKuC,SAAS,EAAC,QAAQ;MAACC,GAAG,EAAElC,SAAU;MAAAgC,QAAA,eACrCtC,OAAA;QAAKuC,SAAS,EAAC,UAAU;QAACC,GAAG,EAAEjC,WAAY;QAAA+B,QAAA,eACzCtC,OAAA;UAAQyC,EAAE,EAAC,KAAK;UAACC,EAAE,EAAC,KAAK;UAACC,CAAC,EAAC,KAAK;UAACC,IAAI,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACnD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEZ;AAAC7C,GAAA,CA7DQF,OAAO;AAAAgD,EAAA,GAAPhD,OAAO;AA6Df;AAED,eAAeA,OAAO;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}