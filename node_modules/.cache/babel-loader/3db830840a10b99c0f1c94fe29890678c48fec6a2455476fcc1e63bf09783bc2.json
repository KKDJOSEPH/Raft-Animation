{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop_D\\\\react-animejs\\\\raft\\\\src\\\\pages\\\\page20.js\";\nimport '../css/page20.css';\nimport React from 'react';\nimport anime from \"animejs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Page20(props) {\n  function animation() {\n    // 获取圆形div和进度条元素\n    let circle = document.getElementById('circle');\n    let progress = document.getElementById('progress');\n\n    // 设置初始进度（0%）\n    let initialProgress = 0;\n\n    // 设置目标进度（75%）\n    let targetProgress = 0.55;\n\n    // 设置动画属性\n    let animation = anime({\n      targets: progress,\n      strokeDasharray: [0, 2 * Math.PI * circle.offsetWidth],\n      strokeDashoffset: function (el) {\n        return anime.setDashoffset(el);\n      },\n      easing: 'linear',\n      duration: 1000,\n      autoplay: true,\n      loop: true\n    });\n\n    // 调节进度的函数\n    function setProgress(value) {\n      // 将进度值限制在0到1之间\n      let progressValue = Math.min(Math.max(value, 0), 1);\n\n      // 更新进度条动画\n      animation.seek(animation.duration * progressValue);\n\n      // 更新进度文本显示\n      console.log('当前进度：' + progressValue * 100 + '%');\n    }\n\n    // 示例：动态循环变化进度从0%到75%\n    setProgress(targetProgress);\n  }\n  if (props.display) animation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: props.display ? '' : 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"circle\",\n      className: \"circle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"progress\",\n        className: \"progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n_c = Page20;\nexport default Page20;\nvar _c;\n$RefreshReg$(_c, \"Page20\");","map":{"version":3,"names":["React","anime","jsxDEV","_jsxDEV","Page20","props","animation","circle","document","getElementById","progress","initialProgress","targetProgress","targets","strokeDasharray","Math","PI","offsetWidth","strokeDashoffset","el","setDashoffset","easing","duration","autoplay","loop","setProgress","value","progressValue","min","max","seek","console","log","display","style","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Desktop_D/react-animejs/raft/src/pages/page20.js"],"sourcesContent":["import '../css/page20.css';\r\nimport React from 'react'\r\nimport anime from \"animejs\";\r\n\r\nfunction Page20(props){\r\n\r\n  function animation(){\r\n// 获取圆形div和进度条元素\r\n    let circle = document.getElementById('circle');\r\n    let progress = document.getElementById('progress');\r\n\r\n// 设置初始进度（0%）\r\n    let initialProgress = 0;\r\n\r\n// 设置目标进度（75%）\r\n    let targetProgress = 0.55;\r\n\r\n// 设置动画属性\r\n    let animation = anime({\r\n      targets: progress,\r\n      strokeDasharray: [0, 2 * Math.PI * circle.offsetWidth],\r\n      strokeDashoffset: function(el) {\r\n        return anime.setDashoffset(el);\r\n      },\r\n      easing: 'linear',\r\n      duration: 1000,\r\n      autoplay: true,\r\n      loop: true\r\n    });\r\n\r\n// 调节进度的函数\r\n    function setProgress(value) {\r\n      // 将进度值限制在0到1之间\r\n      let progressValue = Math.min(Math.max(value, 0), 1);\r\n\r\n      // 更新进度条动画\r\n      animation.seek(animation.duration * progressValue);\r\n\r\n      // 更新进度文本显示\r\n      console.log('当前进度：' + (progressValue * 100) + '%');\r\n    }\r\n\r\n// 示例：动态循环变化进度从0%到75%\r\n    setProgress(targetProgress);\r\n  }\r\n  if(props.display) animation();\r\n\r\n\r\n  return(\r\n      <div style={{display: props.display?'': 'none'}}>\r\n        <div id=\"circle\" className=\"circle\">\r\n          <div id=\"progress\" className=\"progress\"/>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Page20;"],"mappings":";AAAA,OAAO,mBAAmB;AAC1B,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,MAAMA,CAACC,KAAK,EAAC;EAEpB,SAASC,SAASA,CAAA,EAAE;IACtB;IACI,IAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAC9C,IAAIC,QAAQ,GAAGF,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;;IAEtD;IACI,IAAIE,eAAe,GAAG,CAAC;;IAE3B;IACI,IAAIC,cAAc,GAAG,IAAI;;IAE7B;IACI,IAAIN,SAAS,GAAGL,KAAK,CAAC;MACpBY,OAAO,EAAEH,QAAQ;MACjBI,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGT,MAAM,CAACU,WAAW,CAAC;MACtDC,gBAAgB,EAAE,SAAAA,CAASC,EAAE,EAAE;QAC7B,OAAOlB,KAAK,CAACmB,aAAa,CAACD,EAAE,CAAC;MAChC,CAAC;MACDE,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;;IAEN;IACI,SAASC,WAAWA,CAACC,KAAK,EAAE;MAC1B;MACA,IAAIC,aAAa,GAAGZ,IAAI,CAACa,GAAG,CAACb,IAAI,CAACc,GAAG,CAACH,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;;MAEnD;MACApB,SAAS,CAACwB,IAAI,CAACxB,SAAS,CAACgB,QAAQ,GAAGK,aAAa,CAAC;;MAElD;MACAI,OAAO,CAACC,GAAG,CAAC,OAAO,GAAIL,aAAa,GAAG,GAAI,GAAG,GAAG,CAAC;IACpD;;IAEJ;IACIF,WAAW,CAACb,cAAc,CAAC;EAC7B;EACA,IAAGP,KAAK,CAAC4B,OAAO,EAAE3B,SAAS,EAAE;EAG7B,oBACIH,OAAA;IAAK+B,KAAK,EAAE;MAACD,OAAO,EAAE5B,KAAK,CAAC4B,OAAO,GAAC,EAAE,GAAE;IAAM,CAAE;IAAAE,QAAA,eAC9ChC,OAAA;MAAKiC,EAAE,EAAC,QAAQ;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,eACjChC,OAAA;QAAKiC,EAAE,EAAC,UAAU;QAACC,SAAS,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEZ;AAACC,EAAA,GAnDQtC,MAAM;AAqDf,eAAeA,MAAM;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}